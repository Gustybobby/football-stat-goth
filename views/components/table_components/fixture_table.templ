package table_components

import (
	"football-stat-goth/queries"
	"football-stat-goth/services/plformat"
	"football-stat-goth/views/components"
	"strconv"
)

templ FixtureTable(fixtures []queries.ListMatchesWithClubsAndGoalsRow) {
	@components.BaseCard("Fixtures") {
		if len(fixtures) > 0 {
			<ul>
				for _, match := range fixtures {
					<li class="border-b border-primary">
						<div class="w-full text-center p-2">{ plformat.FormatTimestamp(match.StartAt.Time.Local()) }</div>
						<a
							class="grid grid-cols-5 text-secondary-background font-bold gap-2 place-items-center p-2 hover:bg-primary-foreground"
							href={ templ.SafeURL("/matches/" + strconv.Itoa(int(match.ID))) }
						>
							<span>{ match.HomeClubID }</span>
							<img src={ match.HomeClubLogo } class="size-8"/>
							<span class="font-semibold">
								if match.HomeGoals > match.AwayGoals {
									<p class="inline font-extrabold text-secondary">{ strconv.Itoa(int(match.HomeGoals)) }</p>
								} else {
									<p class="inline">{ strconv.Itoa(int(match.HomeGoals)) }</p>
								}
								&nbsp;-
								if match.HomeGoals < match.AwayGoals {
									<p class="inline font-extrabold text-secondary">{ strconv.Itoa(int(match.AwayGoals)) }</p>
								} else {
									<p class="inline">{ strconv.Itoa(int(match.AwayGoals)) }</p>
								}
							</span>
							<img src={ match.AwayClubLogo } class="size-8"/>
							<span>{ match.AwayClubID }</span>
						</a>
					</li>
				}
			</ul>
		} else {
			<div class="text-center w-full p-2">No upcoming matches</div>
		}
	}
}
