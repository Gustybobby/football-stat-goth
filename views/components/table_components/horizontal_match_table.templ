package table_components

import (
	"football-stat-goth/queries"
	"football-stat-goth/services/plformat"
	"football-stat-goth/views/components"
	"strconv"
)

templ HorizontalMatchTable(week int16, matches []queries.ListMatchesWithClubsAndGoalsRow) {
	@components.BaseCard("Matchweek " + strconv.Itoa(int(week))) {
		<div class="flex items-center space-x-4 w-full overflow-auto p-4">
			for _, match := range matches {
				<a
					href={ templ.SafeURL("/matches/" + strconv.Itoa(int(match.ID))) }
					class="flex flex-col items-center font-bold text-secondary bg-gradient-to-br from-primary-background to-primary-foreground border border-primary  p-2 min-w-fit rounded-md shadow-lg hover:cursor-pointer"
				>
					<div class="flex items-center justify-center text-center space-x-1">
						<h1>{ match.HomeClubID }</h1>
						<img src={ match.HomeClubLogo } class="size-6"/>
						<p>vs</p>
						<img src={ match.AwayClubLogo } class="size-6"/>
						<h1>{ match.AwayClubID }</h1>
					</div>
					<span class="font-semibold">
						if match.HomeGoals > match.AwayGoals {
							<p class="inline font-extrabold text-secondary">{ strconv.Itoa(int(match.HomeGoals)) }</p>
						} else {
							<p class="inline">{ strconv.Itoa(int(match.HomeGoals)) }</p>
						}
						&nbsp;-
						if match.HomeGoals < match.AwayGoals {
							<p class="inline font-extrabold text-secondary">{ strconv.Itoa(int(match.AwayGoals)) }</p>
						} else {
							<p class="inline">{ strconv.Itoa(int(match.AwayGoals)) }</p>
						}
					</span>
					<span>{ plformat.FormatTimestamp(match.StartAt.Time.Local()) }</span>
				</a>
			}
		</div>
	}
}
