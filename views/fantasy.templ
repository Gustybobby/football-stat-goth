package views

import (
	"football-stat-goth/queries"
	"football-stat-goth/views/components"
	"football-stat-goth/views/components/playercard_components"
	"football-stat-goth/views/layouts"
)

templ Fantasy(
	user *queries.FindUserByUsernameRow,
	fixtures []queries.ListMatchesWithClubsAndGoalsRow,
	players []queries.GetPlayerInfoForFantasyRow,
) {
	@layouts.Base() {
		@components.Fixture(fixtures)
		@components.Nav(user)
		<main class="w-full p-4 bg-primary-background min-h-screen flex flex-initial place-content-center">
			<div class="max-w-5xl">
				<section class="w-full flex px-2 py-8 space-x-4 flex-row">
					<section class="basis-2/3 overflow-hidden">
						<h1 class="text-xl text-center font-bold p-2 bg-gradient-to-br from-secondary-foreground to-secondary-background text-primary-background rounded-t-lg border border-t-primary">
							Your Team
						</h1>
						<div
							class="relative w-full h-[700px] rounded-b-lg border items-center border-primary shadow-lg bg-gradient-to-tr from-secondary-foreground from-20% via-sky-500 via-50% to-emerald-500 to-90%"
						>
							<img
								class="w-full h-full"
								src="/public/1-1-football-pitch.png"
							/>
							// make 3 section for each row instead, then make section within thos.
							<div class="absolute inset-0 flex items-center px-14">
								<section class="w-full h-[80%] grid grid-rows-4 place-content-center gap-y-11 -translate-y-11">
									<div class="flex h-full justify-center">
										@playercard_components.PlayerCard()
									</div>
									<section class="flex h-full justify-center -translate-y-8">
										@playercard_components.PlayerCard()
										@playercard_components.PlayerCard()
										@playercard_components.PlayerCard()
										@playercard_components.PlayerCard()
									</section>
									<section class="flex h-full justify-center -translate-y-8">
										@playercard_components.PlayerCard()
										@playercard_components.PlayerCard()
										@playercard_components.PlayerCard()
										@playercard_components.PlayerCard()
									</section>
									<section class="flex h-full space-x-11 justify-center -translate-y-8">
										@playercard_components.PlayerCard()
										@playercard_components.PlayerCard()
									</section>
								</section>
							</div>
						</div>
					</section>
					<div class="basis-1/3 flex flex-col space-y-4 transition-all">
						<section class="rounded-lg border border-primary shadow-lg w-full">
							<h1
								class="text-xl text-center font-bold p-2 bg-gradient-to-br from-secondary-foreground to-secondary-background text-primary-background rounded-t-lg"
							>
								Players
							</h1>
							<div class="flex flex-col h-[700px]">
								<input type="text" id="nameFilter" placeholder="Search player..." class="p-4 border border-gray-300 rounded m-4"/>
								<ul class="px-4 h-full overflow-scroll">
									for _,player := range players {
										<a href="" class="flex justify-center py-8 player-card">
											<div class="flip-card w-32 h-40">
												<div class="flip-card-inner ">
													<div class="flip-card-front relative h-full">
														// front side, user playercard_front
														@playercard_components.PlayerCardImg(player)
														<span class="absolute inset-0 w-full h-full py-8 align-text-top text-center">
															<p class="text-primary-foreground font-bold player-name">{ player.Lastname }</p>
															<p class=" hidden player-club">{ player.ClubID } </p>
														</span>
													</div>
													<div class="flip-card-back relative">
														// back side, user playercard_back
														@playercard_components.PlayerCard()
														<span class="absolute inset-0 w-full h-full py-8 align-text-top text-center">
															<p class="text-primary-foreground font-bold">{ player.Lastname }</p>
															<p class="font-semibold">{ string(player.Position) }</p>
															<p class="font-semibold">Cost:</p>
														</span>
													</div>
												</div>
											</div>
										</a>
									}
								</ul>
								<script>
									document.getElementById('nameFilter').addEventListener('input', function() {
										const filter = this.value.toLowerCase();
										const cards = document.querySelectorAll('.player-card');
										cards.forEach(card => {
											const name = card.querySelector('.player-name').textContent.toLowerCase();
											const club = card.querySelector('.player-club').textContent.toLowerCase();
											if (name.includes(filter) || club.includes(filter)) {
												card.style.display = '';
											} else {
												card.style.display = 'none';
											}
										});
									});
								</script>
							</div>
						</section>
					</div>
				</section>
			</div>
		</main>
	}
}
