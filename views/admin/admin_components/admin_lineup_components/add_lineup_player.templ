package admin_lineup_components

import (
	"football-stat-goth/queries"
	"strconv"
)

type AddLineupPlayerParams struct {
	ClubID        string
	ClubName      string
	LineupID      int32
	LineupPlayers []queries.ListLineupPlayersByLineupIDRow
}

templ AddLineupPlayer(params AddLineupPlayerParams) {
	<section class="rounded-lg border border-primary shadow-lg w-full p-4">
		<h1 class="text-2xl font-bold mb-4">{ params.ClubName }</h1>
		<div class="grid grid-cols-2 gap-4">
			<div class="space-y-4" id={ "add_player_" + params.ClubID }></div>
			<div class="flex flex-col space-y-4">
				for i := range(5) {
					<div class="flex items-center space-x-4 justify-center">
						if i == 0 {
							if isPositionNoExist(0, params.LineupPlayers) {
								<button
									class="size-12 rounded-full text-center bg-primary text-secondary-background text-xl font-bold"
									disabled
								>
									E
								</button>
							} else {
								<button
									class="size-12 rounded-full text-center bg-secondary text-primary-background text-xl font-bold hover:bg-secondary-background"
									hx-get={ "/cmps/lineup-players/add-form?lineup_id=" + strconv.Itoa(int(params.LineupID)) + "&position_no=" + strconv.Itoa(i) + "&club_id=" + params.ClubID }
									hx-swap="none"
								>
									+0
								</button>
							}
						} else {
							for j := range(5) {
								if isPositionNoExist(i*10 + j, params.LineupPlayers) {
									<button
										class="size-12 rounded-full text-center bg-primary text-secondary-background text-xl font-bold"
										disabled
									>
										E
									</button>
								} else {
									<button
										class="size-12 rounded-full text-center bg-secondary text-primary-background text-xl font-bold hover:bg-secondary-background"
										hx-get={ "/cmps/lineup-players/add-form?lineup_id=" + strconv.Itoa(int(params.LineupID)) + "&position_no=" + strconv.Itoa(i*10+j) + "&club_id=" + params.ClubID }
										hx-swap="none"
									>
										+{ strconv.Itoa(i*10+j) }
									</button>
								}
							}
						}
					</div>
				}
			</div>
		</div>
	</section>
}

func isPositionNoExist(positionNo int, lineupPlayers []queries.ListLineupPlayersByLineupIDRow) bool {
	for _, lineupPlayer := range lineupPlayers {
		if lineupPlayer.PositionNo == int16(positionNo) {
			return true
		}
	}
	return false
}
