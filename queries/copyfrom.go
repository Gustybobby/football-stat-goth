// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: copyfrom.go

package queries

import (
	"context"
)

// iteratorForInsertFantasyTransacion implements pgx.CopyFromSource.
type iteratorForInsertFantasyTransacion struct {
	rows                 []InsertFantasyTransacionParams
	skippedFirstNextCall bool
}

func (r *iteratorForInsertFantasyTransacion) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForInsertFantasyTransacion) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Cost,
		r.rows[0].Type,
		r.rows[0].FantasyTeamID,
		r.rows[0].FantasyPlayerID,
	}, nil
}

func (r iteratorForInsertFantasyTransacion) Err() error {
	return nil
}

func (q *Queries) InsertFantasyTransacion(ctx context.Context, arg []InsertFantasyTransacionParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"fantasy_transaction"}, []string{"cost", "type", "fantasy_team_id", "fantasy_player_id"}, &iteratorForInsertFantasyTransacion{rows: arg})
}
